// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// DistWav
double DistWav(NumericVector u);
RcppExport SEXP enercast_DistWav(SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(DistWav(u));
    return rcpp_result_gen;
END_RCPP
}
// prevkerfon
NumericVector prevkerfon(NumericVector serie_x, NumericVector serie_y, NumericVector serie_x0, double h, double EPS);
RcppExport SEXP enercast_prevkerfon(SEXP serie_xSEXP, SEXP serie_ySEXP, SEXP serie_x0SEXP, SEXP hSEXP, SEXP EPSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type serie_x(serie_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type serie_y(serie_ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type serie_x0(serie_x0SEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type EPS(EPSSEXP);
    rcpp_result_gen = Rcpp::wrap(prevkerfon(serie_x, serie_y, serie_x0, h, EPS));
    return rcpp_result_gen;
END_RCPP
}
// CVkerfon
double CVkerfon(NumericVector serie_x, NumericVector serie_y, int p, int r, double h, double EPS);
RcppExport SEXP enercast_CVkerfon(SEXP serie_xSEXP, SEXP serie_ySEXP, SEXP pSEXP, SEXP rSEXP, SEXP hSEXP, SEXP EPSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type serie_x(serie_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type serie_y(serie_ySEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type EPS(EPSSEXP);
    rcpp_result_gen = Rcpp::wrap(CVkerfon(serie_x, serie_y, p, r, h, EPS));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"enercast_DistWav", (DL_FUNC) &enercast_DistWav, 1},
    {"enercast_prevkerfon", (DL_FUNC) &enercast_prevkerfon, 5},
    {"enercast_CVkerfon", (DL_FUNC) &enercast_CVkerfon, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_enercast(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
